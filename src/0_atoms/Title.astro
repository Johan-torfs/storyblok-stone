---
import { storyblokEditable, type SbBlokData, type ISbRichtext } from '@storyblok/astro';
import type { TextColor } from '../tailwind/types/Color';
import type { TextCenter, TextFont, TextSize, TextMaxWidth } from '../tailwind/types/Text';
import { getClassName, getTextColorClasses, getFontClasses, getFontSizeClasses, getTextCenterClasses, getMarginBottomClasses, getTextMaxWidthClasses } from '../tailwind/class_name_compiler';
import type { MarginBottom } from '../tailwind/types/Margin';

interface StoryblokTitle extends SbBlokData, TextColor, TextFont, TextSize, TextCenter, TextMaxWidth, MarginBottom {
    component: 'title';
    title: string;
    html_tag?: "h1" | "h2" | "h3" | "h4" | "h5" | "h6";
}


interface Props {
    blok: StoryblokTitle;
}

const { blok } = Astro.props;

const className = getClassName(blok, {
    decorators: [
        {decorator: getTextColorClasses},
        {decorator: getFontClasses},
        {decorator: getFontSizeClasses},
        {decorator: getTextCenterClasses},
        {decorator: getMarginBottomClasses},
        {decorator: getTextMaxWidthClasses},
    ]
});
---

{blok.html_tag == 'h1' ? (
    <h1 {...storyblokEditable(blok)}
    class:list={[className]}>{blok.title}</h1>
) : null}

{blok.html_tag == 'h2' || blok.html_tag == undefined ? (
    <h2 {...storyblokEditable(blok)} 
    class:list={[className]}>{blok.title}</h2>
) : null}

{blok.html_tag == 'h3' ? (
    <h3 {...storyblokEditable(blok)} 
    class:list={[className]}>{blok.title}</h3>
) : null}

{blok.html_tag == 'h4' ? (
    <h4 {...storyblokEditable(blok)} 
    class:list={[className]}>{blok.title}</h4>
) : null}

{blok.html_tag == 'h5' ? (
    <h5 {...storyblokEditable(blok)} 
    class:list={[className]}>{blok.title}</h5>
) : null}

{blok.html_tag == 'h6' ? (
    <h6 {...storyblokEditable(blok)} 
    class:list={[className]}>{blok.title}</h6>
) : null}