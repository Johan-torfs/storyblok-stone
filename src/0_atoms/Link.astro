---
import { storyblokEditable, type SbBlokData } from '@storyblok/astro';

interface StoryblokLink extends SbBlokData {
    component: 'link';
    text: string;
    link: {
        linktype: 'url' | 'story' | 'asset';
        cached_url: string;
    };
    hover: 'underline' | 'background' | 'text';
}

interface Props {
    blok: StoryblokLink;
}

const { blok } = Astro.props;

if (!blok.link) {
    blok.link = {
        linktype: 'url',
        cached_url: '#',
    };
}

if (blok.link.linktype === 'story') {
    blok.link.cached_url = `/${blok.link.cached_url}`;
}

if (blok.link.cached_url == '/home') {
    blok.link.cached_url = '/';
}

const className = `
    relative cursor-pointer pointer-events-auto 
    ${blok.hover === 'underline' ? 'relative cursor-pointer pointer-events-auto after:absolute after:block after:h-1 after:w-0 hover:after:w-full after:transition-all after:duration-200 after:delay-200 after:ease-in after:bg-primary-500 after:rounded-full after:-bottom-1' : ''}
    ${blok.hover === 'background' ? 'hover:bg-primary-500/20 rounded-md p-2' : ''}
    ${blok.hover === 'text' ? 'hover:text-primary-500' : ''}
`
---

<a {...storyblokEditable(blok)} href={blok.link.cached_url} class={className}>{blok.text}</a>