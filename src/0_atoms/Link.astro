---
import { storyblokEditable, type SbBlokData } from '@storyblok/astro';
import type { Hover } from '../tailwind/types/Hover';
import { getClassName, getHoverClasses, getTextCenterClasses, getTextWidthClasses, getPaddingXClasses, getPaddingYClasses, getTextColorClasses } from '../tailwind/class_name_compiler';
import type { TextCenter, TextMaxWidth } from '../tailwind/types/Text';
import type { PaddingX, PaddingY } from '../tailwind/types/Padding';
import type { TextColor } from '../tailwind/types/Color';

interface StoryblokLink extends SbBlokData, TextColor, Hover, TextMaxWidth, TextCenter, PaddingX, PaddingY {
    component: 'link';
    text: string;
    link: {
        linktype: 'url' | 'story' | 'asset';
        cached_url: string;
    };
}

interface Props {
    blok: StoryblokLink;
}

const { blok } = Astro.props;

if (!blok.link) {
    blok.link = {
        linktype: 'url',
        cached_url: '#',
    };
}

if (blok.link.linktype === 'story') {
    blok.link.cached_url = `/${blok.link.cached_url}`;
}

if (blok.link.cached_url == '/home') {
    blok.link.cached_url = '/';
}

const className = getClassName(blok, {
    decorators: [
        {decorator: getHoverClasses},
        {decorator: getTextCenterClasses},
        {decorator: getTextWidthClasses},
        {decorator: getPaddingXClasses},
        {decorator: getPaddingYClasses},
        {decorator: getTextColorClasses},
    ]
});
---

<a {...storyblokEditable(blok)} href={blok.link.cached_url} class={className}>{blok.text}</a>