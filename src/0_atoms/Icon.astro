---
import { storyblokEditable, type SbBlokData } from '@storyblok/astro';

interface StoryblokIcon extends SbBlokData {
    component: "icon";
    icon: {
        type: string;
        icon: string;
    };
    color?: "primary"| "secondary" | "accent_1" | "accent_2" | "accent_3" | "accent_4" | "accent_5" | "white" | "black";
    dark?: boolean;
}


interface Props {
    blok: StoryblokIcon;
}

const { blok } = Astro.props;

const possibleColors = {
    primary: blok.dark ? "dark:text-primary-700 text-primary-400" : "text-primary-700 dark:text-primary-400",
    secondary: blok.dark ? "dark:text-secondary-700 text-secondary-400" : "text-secondary-700 dark:text-secondary-400",
    accent_1: blok.dark ? "dark:text-accent-1-700 text-accent-1-400" : "text-accent-1-700 dark:text-accent-1-400",
    accent_2: blok.dark ? "dark:text-accent-2-700 text-accent-2-400" : "text-accent-2-700 dark:text-accent-2-400",
    accent_3: blok.dark ? "dark:text-accent-3-700 text-accent-3-400" : "text-accent-3-700 dark:text-accent-3-400",
    accent_4: blok.dark ? "dark:text-accent-4-700 text-accent-4-400" : "text-accent-4-700 dark:text-accent-4-400",
    accent_5: blok.dark ? "dark:text-accent-5-700 text-accent-5-400" : "text-accent-5-700 dark:text-accent-5-400",
    white: blok.dark ? "text-white text-black" : "dark:text-white text-black",
    black: blok.dark ? "text-black text-white" : "dark:text-black text-white",
    default: blok.dark ? "text-white text-black" : "dark:text-white text-black",
}

const className = `
    ${blok.color ? possibleColors[blok.color] : possibleColors.default}
`.replace(/\s+/g, ' ').trim();
---

<i class:list={[blok.icon.type, blok.icon.icon, className]} aria-hidden="true"></i>