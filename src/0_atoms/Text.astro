---
import { storyblokEditable, type SbBlokData, type ISbRichtext, renderRichText } from '@storyblok/astro';
import TextSvelte from './text/Text.svelte';

interface StoryblokParagraph extends SbBlokData {
    component: 'paragraph';
    content: ISbRichtext;
    color?: "primary"| "secondary" | "accent_1" | "accent_2" | "accent_3" | "accent_4" | "accent_5" | "white" | "black";
    dark?: boolean;
    size?: "sm" | "md" | "lg" | "xl" | "2xl" | "3xl" | "4xl" | "default";
    font?: "sans" | "montserrat" | "fraunces";
    uppercase?: boolean;
    decoration?: "underline" | "line-through" | "overline" | "none";
    center?: boolean;
    interactive?: boolean;
    max_width?: "sm" | "md" | "lg" | "xl" | "2xl" | "3xl" | "4xl" | "full" | "prose" | "fit";
    margin_bottom?: 0|2|4|6|8|16|24;
}


interface Props {
    blok: StoryblokParagraph;
}

const { blok } = Astro.props;

const possibleColors = {
    primary: blok.dark ? "dark:text-primary-700 text-primary-400" : "text-primary-700 dark:text-primary-400",
    secondary: blok.dark ? "dark:text-secondary-700 text-secondary-400" : "text-secondary-700 dark:text-secondary-400",
    accent_1: blok.dark ? "dark:text-accent-1-700 text-accent-1-400" : "text-accent-1-700 dark:text-accent-1-400",
    accent_2: blok.dark ? "dark:text-accent-2-700 text-accent-2-400" : "text-accent-2-700 dark:text-accent-2-400",
    accent_3: blok.dark ? "dark:text-accent-3-700 text-accent-3-400" : "text-accent-3-700 dark:text-accent-3-400",
    accent_4: blok.dark ? "dark:text-accent-4-700 text-accent-4-400" : "text-accent-4-700 dark:text-accent-4-400",
    accent_5: blok.dark ? "dark:text-accent-5-700 text-accent-5-400" : "text-accent-5-700 dark:text-accent-5-400",
    white: blok.dark ? "text-white text-black" : "dark:text-white text-black",
    black: blok.dark ? "text-black text-white" : "dark:text-black text-white",
    default: blok.dark ? "text-white text-black" : "dark:text-white text-black",
}

const possibleSize = {
    sm: "text-sm",
    md: "text-md",
    lg: "text-lg",
    xl: "text-xl",
    "2xl": "text-2xl",
    "3xl": "text-3xl",
    "4xl": "text-4xl",
    default: "text-md",
}

const possibleMaxWidth = {
    sm: "max-w-sm",
    md: "max-w-md",
    lg: "max-w-lg",
    xl: "max-w-xl",
    "2xl": "max-w-2xl",
    "3xl": "max-w-3xl",
    "4xl": "text-4xl",
    full: "max-w-full",
    prose: "max-w-prose",
    fit: "max-w-fit",
}

const possibleFonts = {
    sans: "font-sans",
    montserrat: "font-montserrat",
    fraunces: "font-fraunces",
}

const possibleDecorations = {
    underline: "underline",
    "line-through": "line-through",
    overline: "overline",
    none: "no-underline",
}

const possibleMarginBottom = {
    0: "mb-0",
    2: "mb-2",
    4: "mb-4",
    6: "mb-6",
    8: "mb-8",
    16: "mb-16",
    24: "mb-24",
};

const className = `
    ${blok.color ? possibleColors[blok.color] : possibleColors["default"]}
    ${blok.center ? "text-center" : ""}
    ${blok.size ? possibleSize[blok.size] : possibleSize["default"]}
    ${blok.font ? possibleFonts[blok.font] : possibleFonts["sans"]}
    ${blok.uppercase ? "uppercase" : ""}
    ${blok.decoration ? possibleDecorations[blok.decoration] : possibleDecorations["none"]}
    ${blok.max_width ? possibleMaxWidth[blok.max_width] : ""}
    ${blok.margin_bottom ? possibleMarginBottom[blok.margin_bottom] : ""}
`.replace(/\s+/g, ' ').trim();
 
const html = renderRichText(blok.content);
const storyblokEditableData = storyblokEditable(blok);
const htmlWithClass = html.replace(/<p>/g, `<p class="${className}" data-blok-c='${storyblokEditableData['data-blok-c']}' data-blok-uid='${storyblokEditableData['data-blok-uid']}' interactive='${!!blok.interactive}'>`)
---

{blok.interactive ? <TextSvelte htmlWithClass={htmlWithClass} client:visible/> : <Fragment set:html={htmlWithClass} class=" max"/>} 
