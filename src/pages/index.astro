---
import Section from "../4_layout_elements/Section.astro";
import Container from "../4_layout_elements/Container.astro";
import ProductPreviewCard from "../2_components/ProductPreviewCard.astro";

import { useStoryblokApi, type SbBlokData } from '@storyblok/astro'
// @ts-ignore
import StoryblokComponent from "@storyblok/astro/StoryblokComponent.astro";

const storyblokApi = useStoryblokApi()
const response = await storyblokApi.get('cdn/stories/home', {
  version: import.meta.env.PUBLIC_VERCEL_ENV == 'production' ? 'published' : 'draft',
}).then((response: any ) => {
    return response;
})

const home = response.data.story.content;
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Astro</title>

        <script src="https://kit.fontawesome.com/3025c21c68.js" crossorigin="anonymous" defer=true/>

        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Fraunces:opsz,wght@9..144,700&family=Hanken+Grotesk:wght@500;700;800&family=Montserrat:wght@500;700&display=swap" rel="stylesheet">
	</head>
	<body>
        {home.content?.map((blok: SbBlokData) => {            
            return <StoryblokComponent blok={blok} />
        })}
        <!-- <Section paddingY={[{screen: "xs", value: 24}]} paddingX={[{screen: "xs", value: 8}]} color="bg-[#f3e9e3]" class="h-screen">
            <Container>
                <ProductPreviewCard/>
            </Container>
        </Section> -->
	</body>
</html>
