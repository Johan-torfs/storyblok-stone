---
import { type SbBlokData, storyblokEditable } from '@storyblok/astro';
// @ts-ignore
import StoryblokComponent from "@storyblok/astro/StoryblokComponent.astro";

import { getClassName, getPaddingXClasses, getPaddingYClasses, getMarginXClasses, getMarginYClasses, getBackgroundColorClasses } from '../tailwind/class_name_compiler';
import {type PaddingX, type PaddingY} from '../tailwind/types/Padding';
import {type MarginX, type MarginY} from '../tailwind/types/Margin';
import {type BackgroundColor} from '../tailwind/types/Color';

interface StoryblokSection extends SbBlokData, PaddingX, PaddingY, MarginX, MarginY, BackgroundColor {
    component: 'section',
    content: [SbBlokData],
    html_tag: 'section' | 'footer' | 'div' | 'header';
}

interface Props {
    blok: StoryblokSection;
}

const { blok } = Astro.props;

const className = getClassName(blok, {
    decorators: [
        {decorator: getPaddingXClasses},
        {decorator: getPaddingYClasses},
        {decorator: getMarginXClasses},
        {decorator: getMarginYClasses},
        {decorator: getBackgroundColorClasses},
    ]
})
---

{!blok.html_tag || blok.html_tag === 'section' ?
<section class:list={[className]} {...storyblokEditable(blok)}>
    {blok.content.map(item => {            
		return <StoryblokComponent blok={item}/>
	})}
</section>
: null}
{blok.html_tag === 'footer' ?
<footer class:list={[className]} {...storyblokEditable(blok)}>
    {blok.content.map(item => {            
		return <StoryblokComponent blok={item}/>
	})}
</footer>
: null}
{blok.html_tag === 'header' ?
<header class:list={[className]} {...storyblokEditable(blok)}>
    {blok.content.map(item => {            
		return <StoryblokComponent blok={item}/>
	})}
</header>
: null}
{blok.html_tag === 'div' ?
<div class:list={[className]} {...storyblokEditable(blok)}>
    {blok.content.map(item => {            
		return <StoryblokComponent blok={item}/>
	})}
</div>
: null}