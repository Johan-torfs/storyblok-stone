---
import { storyblokEditable, type SbBlokData } from '@storyblok/astro';
// @ts-ignore
import StoryblokComponent from "@storyblok/astro/StoryblokComponent.astro";

import type { PaddingX, PaddingY } from '../tailwind/types/Padding';
import { getBackgroundColorClasses, getBorderClasses, getClassName, getPaddingXClasses, getPaddingYClasses, getShadowClasses, getBorderRadiusClasses } from '../tailwind/class_name_compiler';
import type { BackgroundGradient } from '../tailwind/types/Color';
import type { Border, BorderRadius } from '../tailwind/types/Border';
import type { Dimensions } from '../tailwind/types/Dimensions';
import type { Shadow } from '../tailwind/types/Shadow';

interface StoryblokCard extends SbBlokData, PaddingX, PaddingY, BackgroundGradient, Border, Dimensions, Shadow, BorderRadius {
    component: 'card',
    content: [SbBlokData],
}

interface Props {
    blok: StoryblokCard;
}

const { blok } = Astro.props;

var className = getClassName(blok, {
    decorators: [
        {decorator: getPaddingXClasses},
        {decorator: getPaddingYClasses},
        {decorator: getBackgroundColorClasses},
        {decorator: getBorderClasses},
        {decorator: getShadowClasses},
        {decorator: getBorderRadiusClasses}
    ]
});
---

<div class:list={["card-container overflow-hidden", className]} {...storyblokEditable(blok)}>
    {blok.content.map(item => {            
        return <StoryblokComponent blok={item} />
    })}
</div>

<style define:vars={{height: blok.height + "px" || "auto", width: blok.width + "px" || "auto"}}>
    .card-container {
        min-height: var(--height);
    }

    .card-container {
        width: clamp(150px, var(--width), 100%);
    }
</style>