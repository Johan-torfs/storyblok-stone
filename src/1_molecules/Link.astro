---
import { storyblokEditable, type SbBlokData } from '@storyblok/astro';
// @ts-ignore
import StoryblokComponent from "@storyblok/astro/StoryblokComponent.astro";
import { getClassName, getPaddingXClasses, getPaddingYClasses } from '../tailwind/class_name_compiler';
import type { PaddingX, PaddingY } from '../tailwind/types/Padding';

interface StoryblokLink extends SbBlokData, PaddingX, PaddingY {
    component: 'link';
    content: SbBlokData[];
    type: 'link';
    link: {
        linktype: 'url' | 'story' | 'asset';
        cached_url: string;
    };
}

interface Props {
    blok: StoryblokLink;
}

const { blok } = Astro.props;

if (!blok.link) {
    blok.link = {
        linktype: 'url',
        cached_url: '#',
    };
}

if (blok.link.linktype === 'story') {
    blok.link.cached_url = `/${blok.link.cached_url}`;
}

if (blok.link.cached_url == '/home') {
    blok.link.cached_url = '/';
}

const className = getClassName(blok, {
    decorators: [
        {decorator: getPaddingXClasses},
        {decorator: getPaddingYClasses},
    ]
});

if (!blok.type) blok.type = 'link';
---

{blok.type == 'link' ? (
<a {...storyblokEditable(blok)} href={blok.link.cached_url} class:list={[className, blok.type, 'group']}>
    {blok.content?.map(item => {            
        return <StoryblokComponent blok={{...item, }} />
    })}
</a>
) : null}